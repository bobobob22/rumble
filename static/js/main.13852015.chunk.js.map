{"version":3,"sources":["components/IconButton/styles.ts","components/IconButton/IconButton.tsx","components/Movie/styles.ts","components/Movie/Movie.tsx","components/MoviesList/helpers.ts","components/MoviesList/reducer.ts","components/MoviesList/styles.ts","components/MoviesList/MoviesList.tsx","containers/App/App.tsx","settings.ts","theme/theme.ts","index.tsx"],"names":["Button","styled","FontAwesomeIcon","IconButton","icon","color","onClick","size","Root","div","props","theme","main","breakpoints","up","MovieWrapper","Title","h2","ImageWrapper","MovieImage","img","ButtonsWrapper","Summary","p","withTheme","movie","handleRejectMovie","handleAcceptMovie","imageURL","title","summary","rating","src","alt","faTimesCircle","error","faCheckCircle","active","getOrder","index","pos","numItems","Math","abs","initialState","sliding","dir","reducer","state","action","console","log","type","MoviesListWrapper","CarouselContainer","CarouselSlot","order","MoviesList","moviesContext","useContext","MoviesContext","areMoviesExists","movies","length","React","useReducer","dispatch","useState","visibleMovieIndex","setVisibleMovieIndex","moviesLimitHasAchiewed","slide","setTimeout","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","map","isMovieVisible","key","id","createContext","App","setMovies","useEffect","loadMovies","a","fetch","data","json","responseData","Provider","value","data-testid","greyBg","zIndex","modal","values","sm","md","lg","xl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13852015.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport const Button = styled(FontAwesomeIcon)`\n  cursor: pointer;\n`;\n","import React from 'react';\n\nimport { IconButtonProps } from './types';\nimport { Button } from './styles';\n\n\nconst IconButton: React.FC<IconButtonProps> = ({ icon, color, onClick }) => {\n  return (\n    <Button icon={icon} size=\"3x\" color={color} onClick={onClick} />\n  )\n};\n\nexport default IconButton;\n","import styled from 'styled-components';\n\n\nexport const Root = styled.div`\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  height: 100vh;\n  background: ${(props) => props.theme.color.main};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  \n  ${(props) => props.theme.breakpoints.up('md')} {\n    max-width: 500px;\n    max-height: 600px;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  padding: 10px;\n  max-width: 90%;\n  height: 90%;\n  width: 100%;\n  border: 1px solid #000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n   text-align: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  max-width: 200px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: auto;\n  margin-bottom: 30px;\n`;\n\nexport const Summary = styled.p`\n  font-style: italic;\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons/faTimesCircle';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons/faCheckCircle';\n\nimport IconButton from 'components/IconButton';\n\nimport { MovieProps } from './types';\nimport { Root, MovieWrapper, Title, ImageWrapper, MovieImage, ButtonsWrapper, Summary } from './styles';\n\n\nconst Movie: React.FC<MovieProps> = ({ theme, movie, handleRejectMovie, handleAcceptMovie }) => {\n  const { imageURL, title, summary, rating } = movie;\n\n  return (\n    <Root>\n      <MovieWrapper>\n        <Title>{title} {rating} / 10</Title>\n        <ImageWrapper>\n          <MovieImage src={imageURL} alt={title} />\n        </ImageWrapper>\n        <Summary>\n          {summary}\n        </Summary>\n        <ButtonsWrapper>\n          <IconButton icon={faTimesCircle} color={theme.color.error} onClick={handleRejectMovie} />\n          <IconButton icon={faCheckCircle} color={theme.color.active} onClick={handleAcceptMovie} />\n        </ButtonsWrapper>\n      </MovieWrapper>\n    </Root>\n  )\n};\n\nexport default withTheme(Movie);\n","interface GetOrderProps {\n  index: number;\n  pos: number;\n  numItems: number;\n}\n\nexport const getOrder = ({ index, pos, numItems }: GetOrderProps) => {\n  return index - pos < 0 ? numItems - Math.abs(index - pos) : index - pos;\n};\n\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { NEXT, PREV } from \"./helpers\";\n\ntype State = {\n  pos: number;\n  sliding?: boolean;\n  dir?: string;\n}\n\ntype Action =\n  | { type: 'stopSliding' }\n  | { type: 'PREV2' }\n  | { type: 'reset', numItems: number }\n  | { type: 'NEXT', numItems: number }\n  | { type: 'PREV', numItems: number };\n\n\nexport const initialState = { pos: 5, sliding: false, dir: NEXT };\n\nexport function reducer(state: State, action: Action): State {\n  console.log('state', state, 'action', action);\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case PREV:\n      return {\n        ...state,\n        dir: PREV,\n        sliding: true,\n        pos: state.pos === action.numItems - 1 ? 0 : state.pos + 1\n      };\n    case NEXT:\n      return {\n        ...state,\n        dir: NEXT,\n        sliding: true,\n        pos: state.pos === action.numItems - 1 ? 0 : state.pos + 1\n      };\n    case \"stopSliding\":\n      return { ...state, sliding: false };\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\nimport { NEXT } from './helpers';\nimport { CarouselProps, CarouselSlotProps } from './types';\n\n\nexport const Root = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n\n  ${(props) => props.theme.breakpoints.up('md')} {\n    max-width: 800px;\n    margin: 0 auto;\n    background: rgba(0,0,0,0.15);\n  }\n`;\n\nexport const MoviesListWrapper= styled.div`\n  overflow: hidden;\n  width: 100%;\n`;\n\nexport const CarouselContainer = styled.div`\n  display: flex;\n  transition: ${(props: CarouselProps) => (props.sliding ? \"none\" : \"transform 1s ease\")};\n\n  transform: ${props => {\n    if (!props.sliding) return \"translateX(calc(-100%))\";\n    if (props.dir === NEXT) return \"translateX(calc(2 * (-100%)))\";\n    return \"translateX(0%)\";\n  }};\n`;\n\nexport const CarouselSlot = styled.div`\n  flex: 1 0 100%;\n  flex-basis: 100%;\n  order: ${(props: CarouselSlotProps) => props.order};\n`;\n","import React, { useState, useContext } from 'react';\nimport { useSwipeable } from 'react-swipeable';\n\nimport { MoviesContext } from 'containers/App';\nimport Movie from 'components/Movie';\n\nimport { reducer, initialState } from './reducer';\nimport { getOrder, NEXT, PREV } from './helpers';\nimport { Root, MoviesListWrapper, CarouselContainer, CarouselSlot } from './styles';\n\n\nconst MoviesList: React.FC = (props): React.ReactElement | null => {\n  const moviesContext = useContext(MoviesContext);\n  const areMoviesExists = moviesContext && moviesContext.movies && moviesContext.movies.length;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [visibleMovieIndex, setVisibleMovieIndex] = useState<number>(0);\n\n\n  const handleRejectMovie = (id: string): void => {\n    console.log('reject');\n    slide(PREV);\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n\n  const handleAcceptMovie = (id: string): void => {\n    console.log(\"accept\")\n    slide(NEXT)\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n  const numItems: number = moviesContext && moviesContext.movies && moviesContext.movies.length;\n\n  const handleSwipeLeft = () => {\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n    slide(PREV);\n  };\n\n  const moviesLimitHasAchiewed = areMoviesExists && moviesContext.movies.length === visibleMovieIndex;\n\n  const slide = (dir: 'reset' | 'NEXT' | 'PREV' | 'PREV2' | 'stopSliding') => {\n    dispatch({ type: dir, numItems });\n    setTimeout(() => {\n      dispatch({ type: \"stopSliding\" });\n    }, 50);\n  };\n\n  const handlers = useSwipeable({\n    onSwipedLeft: handleSwipeLeft,\n    onSwipedRight: () => slide('stopSliding'),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  if (!areMoviesExists) {\n    return null;\n  }\n\n  return (\n    <Root>\n      {moviesLimitHasAchiewed ? (\n        <p>There is no more movies in our database...</p>\n      ) : (\n        <MoviesListWrapper {...handlers}>\n          <CarouselContainer dir={state.dir} sliding={state.sliding}>\n            {moviesContext && moviesContext.movies && moviesContext.movies.map((movie: any, index: any) => {\n              const isMovieVisible = index === visibleMovieIndex;\n              return (\n                <CarouselSlot\n                  key={index}\n                  order={getOrder({ index: index, pos: state.pos, numItems })}\n                >\n                  <Movie\n                    key={movie.id}\n                    movie={movie}\n                    handleRejectMovie={() => handleRejectMovie(movie.id)}\n                    handleAcceptMovie={() => handleAcceptMovie(movie.id)}\n                    isMovieVisible={isMovieVisible}\n                  />\n                </CarouselSlot>\n              )\n            })}\n          </CarouselContainer>\n        </MoviesListWrapper>\n      )}\n    </Root>\n  )\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\n\nimport { apiUrl } from 'settings';\nimport MoviesList from 'components/MoviesList';\n\nexport const MoviesContext = React.createContext<any>([[], () => {}]);\n\n\nconst App: React.FunctionComponent = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    loadMovies();\n  }, []);\n\n  const loadMovies = async () => {\n    try {\n      const data = await fetch(`${apiUrl}/all`)\n      const responseData = await data.json();\n      if (responseData) {\n        setMovies(() => responseData);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  return (\n    <MoviesContext.Provider value={movies}>\n      <MoviesList data-testid=\"app\" />\n    </MoviesContext.Provider>\n  );\n};\n\nexport default App;\n","export const apiUrl = 'https://simple-rumble-backend.herokuapp.com/movies';\n","import { DefaultTheme } from 'styled-components';\n\n\nexport interface CustomTheme extends DefaultTheme {\n  color: {\n    main: string;\n    greyBg: string;\n    error: string;\n    active: string;\n  },\n  zIndex: {\n    modal: number\n  },\n  breakpoints: {\n    values: {\n      sm: number;\n      md: number;\n      lg: number;\n      xl: number;\n    },\n    up?: (key: keyof CustomTheme[\"breakpoints\"][\"values\"]) => string;\n  }\n}\n\nexport const theme: CustomTheme = {\n  color: {\n    main: '#DFF583',\n    greyBg: '#F5F6FB',\n    error: '#EC4E4F',\n    active: '#65CC94',\n  },\n  zIndex: {\n    modal: 99999,\n  },\n  breakpoints: {\n    values: {\n      sm: 576,\n      md: 768,\n      lg: 991,\n      xl: 1200,\n    },\n    up: (key) => {\n      const value = theme.breakpoints.values[key];\n      return `@media all and (min-width: ${value}px)`;\n    },\n  }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport 'normalize.css';\nimport App from 'containers/App';\nimport { theme } from 'theme/theme';\n\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}