{"version":3,"sources":["components/IconButton/styles.ts","components/IconButton/IconButton.tsx","components/Movie/styles.ts","components/Movie/Movie.tsx","components/MoviesList/styles.ts","components/MoviesList/MoviesList.tsx","containers/App/App.tsx","index.tsx","theme/theme.ts"],"names":["Button","styled","FontAwesomeIcon","IconButton","icon","color","onClick","size","Root","div","MovieWrapper","Title","h2","ImageWrapper","MovieImage","img","ButtonsWrapper","Summary","p","withTheme","theme","movie","handleRejectMovie","handleAcceptMovie","imageURL","isMovieVisible","title","summary","rating","src","alt","faTimesCircle","faCheckCircle","active","MoviesListWrapper","CarouselContainer","props","sliding","dir","PREV","CarouselSlot","order","NEXT","initialState","pos","getOrder","index","numItems","Math","abs","MoviesList","React","useReducer","state","action","console","log","type","dispatch","useState","visibleMovieIndex","setVisibleMovieIndex","moviesData","length","moviesLimitHasAchiewed","slide","setTimeout","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","map","key","id","App","data-testid","ReactDOM","render","StrictMode","main","greyBg","error","zIndex","modal","breakpoints","values","sm","md","lg","xl","document","getElementById"],"mappings":"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","file":"static/js/main.57397fd1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport const Button = styled(FontAwesomeIcon)`\n  cursor: pointer;\n`;\n","import React from 'react';\n\nimport { IconButtonProps } from './types';\nimport { Button } from './styles';\n\n\nconst IconButton: React.FC<IconButtonProps> = ({ icon, color, onClick }) => {\n  return (\n    <Button icon={icon} size=\"3x\" color={color} onClick={onClick} />\n  )\n};\n\nexport default IconButton;\n","import styled from 'styled-components';\n\n\nexport const Root = styled.div`\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  height: 100vh;\n  background: #c2c2c2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  \n  @media all and (min-width: 768px) {\n    max-width: 500px;\n    max-height: 600px;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  padding: 10px;\n  max-width: 90%;\n  height: 90%;\n  width: 100%;\n  border: 1px solid #000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n   text-align: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  max-width: 200px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: auto;\n  margin-bottom: 30px;\n`;\n\nexport const Summary = styled.p`\n\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons/faTimesCircle';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons/faCheckCircle';\n\nimport IconButton from 'components/IconButton';\n\nimport { MovieProps } from './types';\nimport { Root, MovieWrapper, Title, ImageWrapper, MovieImage, ButtonsWrapper, Summary } from './styles';\n\n\nconst Movie: React.FC<MovieProps> = ({ theme, movie, handleRejectMovie, handleAcceptMovie, isMovieVisible }) => {\n  const { imageURL, title, summary, rating } = movie;\n\n\n  return (\n    <Root>\n      <MovieWrapper>\n        <Title>{title} {rating} / 10</Title>\n        <ImageWrapper>\n          <MovieImage src={imageURL} alt={title} />\n        </ImageWrapper>\n        <Summary>\n          {summary}\n        </Summary>\n        <ButtonsWrapper>\n          <IconButton icon={faTimesCircle} color=\"red\" onClick={handleRejectMovie} />\n          <IconButton icon={faCheckCircle} color={theme.color.active} onClick={handleAcceptMovie} />\n        </ButtonsWrapper>\n      </MovieWrapper>\n    </Root>\n  )\n};\n\nexport default withTheme(Movie);\n","import styled from 'styled-components';\n\n\nexport const MoviesListWrapper= styled.div`\n  //margin: 0 auto;\n  //display: flex;\n  //flex-direction: column;\n  //align-items: center;\n  overflow: hidden;\n  width: 100%;\n`;\n\n","import React, { useState } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport styled from 'styled-components';\n\nimport moviesData from 'data/movies.json';\nimport Movie from 'components/Movie';\n\nimport { MoviesListWrapper } from './styles';\n\n\ninterface CarouselProps {\n  sliding?: boolean;\n}\n\ninterface CarouselSlotProps {\n  order?: number\n}\n\nexport const CarouselContainer = styled.div`\n  display: flex;\n  transition: ${(props: CarouselProps) => (props.sliding ? \"none\" : \"transform 1s ease\")};\n  transform: ${props => {\n  if (!props.sliding) return \"translateX(calc(-100%))\";\n  if (props.dir === PREV) return \"translateX(calc(2 * (-100%)))\";\n  return \"translateX(0%)\";\n}};\n`;\n\nexport const CarouselSlot = styled.div`\n  flex: 1 0 100%;\n  flex-basis: 100%;\n  order: ${(props: CarouselSlotProps) => props.order};\n`;\n\n\nexport const NEXT = \"NEXT\";\nexport const PREV = \"PREV\";\n\n// pozycja ostatnia bo ...\nconst initialState = { pos: 5, sliding: false, dir: NEXT };\n\ntype State = {\n  pos: number;\n  sliding?: boolean;\n  dir?: string;\n}\n\ntype Action =\n  | { type: 'stopSliding' }\n  | { type: 'reset', numItems: number }\n  | { type: 'NEXT', numItems: number }\n  | { type: 'PREV', numItems: number };\n\ninterface GetOrderProps {\n  index: number;\n  pos: number;\n  numItems: number;\n}\n\nconst getOrder = ({ index, pos, numItems }: GetOrderProps) => {\n  return index - pos < 0 ? numItems - Math.abs(index - pos) : index - pos;\n};\n\nconst MoviesList: React.FC = (props) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [visibleMovieIndex, setVisibleMovieIndex] = useState<number>(0);\n\n  const handleRejectMovie = (id: string): void => {\n    console.log('reject');\n    slide(NEXT);\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n\n  const handleAcceptMovie = (id: string): void => {\n    console.log(\"accept\")\n    slide(NEXT)\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n  const numItems: number = moviesData.length;\n\n  function reducer(state: State, action: Action): State {\n    console.log('state', state, 'action', action);\n    switch (action.type) {\n      case \"reset\":\n        return initialState;\n      case PREV:\n        return {\n          ...state,\n          dir: PREV,\n          sliding: true,\n          pos: state.pos === 0 ? action.numItems - 1 : state.pos - 1\n        };\n      case NEXT:\n        return {\n          ...state,\n          dir: NEXT,\n          sliding: true,\n          pos: state.pos === action.numItems - 1 ? 0 : state.pos + 1\n        };\n      case \"stopSliding\":\n        return { ...state, sliding: false };\n      default:\n        return state;\n    }\n  }\n\n  const handleSwipeLeft = () => {\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n    slide(NEXT);\n  };\n\n  const moviesLimitHasAchiewed = moviesData.length === visibleMovieIndex;\n\n  const slide = (dir: 'reset' | 'NEXT' | 'PREV' | 'stopSliding') => {\n    dispatch({ type: dir, numItems });\n    setTimeout(() => {\n      dispatch({ type: \"stopSliding\" });\n    }, 50);\n  };\n\n  const handlers = useSwipeable({\n    onSwipedLeft: handleSwipeLeft,\n    onSwipedRight: () => slide('stopSliding'),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  return (\n    <div>\n      {moviesLimitHasAchiewed ? (\n        <p>There is no more movies in our database...</p>\n      ) : (\n        <MoviesListWrapper {...handlers}>\n          <CarouselContainer dir={state.dir} sliding={state.sliding}>\n            {moviesData.map((movie, index) => {\n              const isMovieVisible = index === visibleMovieIndex;\n              return (\n                <CarouselSlot\n                  key={index}\n                  order={getOrder({ index: index, pos: state.pos, numItems })}\n                >\n                  <Movie\n                    key={movie.id}\n                    movie={movie}\n                    handleRejectMovie={() => handleRejectMovie(movie.id)}\n                    handleAcceptMovie={() => handleAcceptMovie(movie.id)}\n                    isMovieVisible={isMovieVisible}\n                  />\n                </CarouselSlot>\n              )\n            })}\n          </CarouselContainer>\n          <button onClick={() => slide(PREV)} >\n            Prev\n          </button>\n          <button onClick={() => slide(NEXT)} >\n            Next\n          </button>\n        </MoviesListWrapper>\n      )}\n    </div>\n  )\n};\n\n\nexport default MoviesList;\n","import React from 'react';\n\nimport MoviesList from 'components/MoviesList';\n\n\nconst App: React.FunctionComponent = () => (\n  <MoviesList data-testid=\"app\" />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport 'normalize.css';\nimport App from 'containers/App';\nimport { theme } from 'theme/theme';\n\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { DefaultTheme } from 'styled-components';\n\n\nexport interface CustomTheme extends DefaultTheme {\n  color: {\n    main: string;\n    greyBg: string;\n    error: string;\n    active: string;\n  },\n  zIndex: {\n    modal: number\n  },\n  breakpoints: {\n    values: {\n      sm: number;\n      md: number;\n      lg: number;\n      xl: number;\n    },\n    up?: (key: string) => string;\n  }\n}\n\nexport const theme: CustomTheme = {\n  color: {\n    main: '#9dc539',\n    greyBg: '#F5F6FB',\n    error: '#EC4E4F',\n    active: '#65CC94',\n  },\n  zIndex: {\n    modal: 99999,\n  },\n  breakpoints: {\n    values: {\n      sm: 576,\n      md: 768,\n      lg: 991,\n      xl: 1200,\n    },\n    // up: (key: string): string => {\n    //   const value = theme.breakpoints.values[key];\n    //   return `@media all and (min-width: ${value}px)`;\n    // },\n  }\n};\n\n"],"sourceRoot":""}