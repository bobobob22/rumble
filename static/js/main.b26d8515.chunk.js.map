{"version":3,"sources":["components/IconButton/styles.ts","components/IconButton/IconButton.tsx","components/Movie/styles.ts","components/Movie/Movie.tsx","components/MoviesList/styles.ts","components/MoviesList/MoviesList.tsx","containers/App/App.tsx","index.js"],"names":["Button","styled","FontAwesomeIcon","IconButton","icon","color","onClick","size","Root","div","MovieWrapper","Title","h2","ImageWrapper","MovieImage","img","ButtonsWrapper","Summary","p","Movie","movie","handleRejectMovie","handleAcceptMovie","isMovieVisible","imageURL","title","summary","rating","src","alt","faTimesCircle","faCheckCircle","MoviesListWrapper","MoviesList","useState","visibleMovieIndex","setVisibleMovieIndex","useEffect","console","log","moviesData","moviesLimitHasAchiewed","length","map","index","key","id","App","data-testid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kXAKO,IAAMA,EAASC,YAAOC,IAAPD,CAAH,KCOJE,EAN+B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC5D,OACE,kBAACN,EAAD,CAAQI,KAAMA,EAAMG,KAAK,KAAKF,MAAOA,EAAOC,QAASA,K,2gCCLlD,IAAME,EAAOP,IAAOQ,IAAV,KAWJC,EAAeT,IAAOQ,IAAV,KAYZE,EAAQV,IAAOW,GAAV,KAILC,EAAeZ,IAAOQ,IAAV,KAIZK,EAAab,IAAOc,IAAV,KAIVC,EAAiBf,IAAOQ,IAAV,KAQdQ,EAAUhB,IAAOiB,EAAV,KCVLC,EA1BqB,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,kBAAmBC,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,eAC1EC,EAAqCJ,EAArCI,SAAUC,EAA2BL,EAA3BK,MAAOC,EAAoBN,EAApBM,QAASC,EAAWP,EAAXO,OAElC,OAAKJ,EAKH,kBAACf,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KAAQc,EAAR,IAAgBE,EAAhB,SACA,kBAACd,EAAD,KACE,kBAACC,EAAD,CAAYc,IAAKJ,EAAUK,IAAKJ,KAElC,kBAACR,EAAD,KACGS,GAEH,kBAACV,EAAD,KACE,kBAAC,EAAD,CAAYZ,KAAM0B,gBAAezB,MAAM,MAAMC,QAASe,IACtD,kBAAC,EAAD,CAAYjB,KAAM2B,gBAAe1B,MAAM,QAAQC,QAASgB,OAfvD,M,+JCXJ,IAAMU,EAAmB/B,IAAOQ,IAAT,KC+CfwB,EA1Cc,WAAO,IAAD,EACiBC,mBAAS,GAD1B,mBAC1BC,EAD0B,KACPC,EADO,KAGjCC,qBAAU,WACRC,QAAQC,IAAIC,KACX,IAEH,IASMC,EAAyBD,EAAWE,SAAWP,EAErD,OACE,oCACGM,EACC,yEAEA,kBAACT,EAAD,KACGQ,EAAWG,KAAI,SAACvB,EAAOwB,GACtB,IAAMrB,EAAiBqB,IAAUT,EACjC,OACE,kBAAC,EAAD,CACEU,IAAKzB,EAAM0B,GACX1B,MAAOA,EACPC,kBAAmB,kBAAwBD,EAAM0B,GAtB7DR,QAAQC,IAAI,eACZH,GAAqB,kBAAMD,EAAoB,MAsBnCb,kBAAmB,kBAAwBF,EAAM0B,QAlB7DV,GAAqB,kBAAMD,EAAoB,MAmBnCZ,eAAgBA,UC/BjBwB,EAJsB,kBACnC,kBAAC,EAAD,CAAYC,cAAY,SCC1BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b26d8515.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nexport const Button = styled(FontAwesomeIcon)`\n  cursor: pointer;\n`;\n","import React from 'react';\n\nimport { IconButtonProps } from './types';\nimport { Button } from './styles';\n\n\nconst IconButton: React.FC<IconButtonProps> = ({ icon, color, onClick }) => {\n  return (\n    <Button icon={icon} size=\"3x\" color={color} onClick={onClick} />\n  )\n};\n\nexport default IconButton;\n","import styled from 'styled-components';\n\n\nexport const Root = styled.div`\n  width: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  height: 100vh;\n  background: #c2c2c2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MovieWrapper = styled.div`\n  padding: 10px;\n  max-width: 90%;\n  height: 90%;\n  width: 100%;\n  border: 1px solid #000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n   text-align: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  max-width: 200px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin-top: auto;\n  margin-bottom: 30px;\n`;\n\nexport const Summary = styled.p`\n\n`;\n","import React from 'react';\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons/faTimesCircle';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons/faCheckCircle';\n\nimport IconButton from 'components/IconButton';\n\nimport { MovieProps } from './types';\nimport { Root, MovieWrapper, Title, ImageWrapper, MovieImage, ButtonsWrapper, Summary } from './styles';\n\n\nconst Movie: React.FC<MovieProps> = ({ movie, handleRejectMovie, handleAcceptMovie, isMovieVisible }) => {\n  const { imageURL, title, summary, rating } = movie;\n\n  if (!isMovieVisible) {\n    return null;\n  }\n\n  return (\n    <Root>\n      <MovieWrapper>\n        <Title>{title} {rating} / 10</Title>\n        <ImageWrapper>\n          <MovieImage src={imageURL} alt={title} />\n        </ImageWrapper>\n        <Summary>\n          {summary}\n        </Summary>\n        <ButtonsWrapper>\n          <IconButton icon={faTimesCircle} color=\"red\" onClick={handleRejectMovie} />\n          <IconButton icon={faCheckCircle} color=\"green\" onClick={handleAcceptMovie} />\n        </ButtonsWrapper>\n      </MovieWrapper>\n    </Root>\n  )\n};\n\nexport default Movie;\n","import styled from 'styled-components';\n\n\nexport const MoviesListWrapper= styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport moviesData from 'data/movies.json';\nimport Movie from 'components/Movie';\n\nimport { MoviesListWrapper } from './styles';\n\n\nconst MoviesList: React.FC = () => {\n  const [visibleMovieIndex, setVisibleMovieIndex] = useState(0);\n\n  useEffect(() => {\n    console.log(moviesData);\n  }, []);\n\n  const handleRejectMovie = (id: string): void => {\n    console.log('reject');\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n\n  const handleAcceptMovie = (id: string): void => {\n    setVisibleMovieIndex(() => visibleMovieIndex + 1);\n  };\n\n  const moviesLimitHasAchiewed = moviesData.length === visibleMovieIndex;\n\n  return (\n    <>\n      {moviesLimitHasAchiewed ? (\n        <p>There is no more movies in our database...</p>\n      ) : (\n        <MoviesListWrapper>\n          {moviesData.map((movie, index) => {\n            const isMovieVisible = index === visibleMovieIndex;\n            return (\n              <Movie\n                key={movie.id}\n                movie={movie}\n                handleRejectMovie={() => handleRejectMovie(movie.id)}\n                handleAcceptMovie={() => handleAcceptMovie(movie.id)}\n                isMovieVisible={isMovieVisible}\n              />\n            )\n          })}\n        </MoviesListWrapper>\n      )}\n    </>\n  )\n};\n\nexport default MoviesList;\n","import React from 'react';\n\nimport MoviesList from 'components/MoviesList';\n\n\nconst App: React.FunctionComponent = () => (\n  <MoviesList data-testid=\"app\" />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport 'normalize.css';\nimport App from 'containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}